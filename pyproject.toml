[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "udsv4-redcap-qc-uploader"
version = "1.0.0"
description = "A comprehensive data management tool for uploading Excel/CSV files to REDCap with full change tracking, validation, and audit logging."
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "ADRC Data Management Team", email = "adrc-data@example.com"}
]
keywords = ["redcap", "data-upload", "quality-control", "audit", "healthcare"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Database",
    "Topic :: System :: Logging",
]

dependencies = [
    "click>=8.0.0",
    "pandas>=2.0.0",
    "requests>=2.31.0",
    "openpyxl>=3.1.2",
    "python-dotenv>=1.0.0",
    "cerberus>=1.3.4",
    "jsonschema>=4.17.0",
    "structlog>=23.1.0",
    "colorlog>=6.7.0",
    "watchdog>=3.0.0",
    "python-dateutil>=2.8.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
analysis = [
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]
all = ["udsv4-redcap-qc-uploader[dev,analysis]"]

[project.urls]
Homepage = "https://github.com/your-org/udsv4-redcap-qc-uploader"
Documentation = "https://github.com/your-org/udsv4-redcap-qc-uploader/blob/main/README.md"
Repository = "https://github.com/your-org/udsv4-redcap-qc-uploader.git"
"Bug Tracker" = "https://github.com/your-org/udsv4-redcap-qc-uploader/issues"

[project.scripts]
udsv4-redcap-uploader = "src.cli.cli:cli"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "config*"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yml", "*.yaml"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "config"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src", "config"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "requests.*",
    "openpyxl.*",
    "IPython.*",
]
ignore_missing_imports = true

# Flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
per-file-ignores = [
    "__init__.py:F401",  # imported but unused
]

# bandit security linter configuration
[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # skip assert_used test
